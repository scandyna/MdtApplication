###############################
# Runners + global parts
###############################

# GitLab shared new Windows runners
# They currently not support Docker engine
#.windows_runner:
  #tags:
    #- shared-windows
    #- windows
    #- windows-1809

.windows_runner:
  tags:
    - docker-windows


stages:
  - build
  - test
  - deploy


###############################
# Reusable templates
###############################

# TODO: OLD, remove
#.conan_createAndTest:
  #stage: build
  #script:
    #- !reference [.setup_conan, script]
    #- conan create . 0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE --test-folder None
    #- conan test test_package MdtApplication/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    #- conan test test_cmakedeps MdtApplication/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE


#.deploy_conan:
  #stage: deploy
  #rules:
    #- if: $CI_COMMIT_TAG
      #when: on_success
    #- when: never
  #script:
    #- !reference [.setup_conan, script]
    #- conan create . scandyna/testing --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o MdtApplication:shared=$BUILD_SHARED_LIBS $CONAN_EXTRA_ARGUMENTS
    #- conan user --password "${CI_JOB_TOKEN}" --remote scandyna ci_user
    #- conan upload MdtApplication/* --remote scandyna --all -c
    ##- conan upload _Project_name_/* --remote scandyna --all -c
    ##- conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first


###############################
# Conan templates
###############################

.setup_conan:
  script:
    - conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git

.conan_createAndTest_CommandLineArguments:
  stage: build
  script:
    - !reference [.setup_conan, script]
    - conan create packaging/conan/CommandLineArguments 0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE --test-folder None
    - conan test packaging/conan/CommandLineArguments/test_package MdtCommandLineArguments/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    - conan test packaging/conan/CommandLineArguments/test_cmakedeps MdtCommandLineArguments/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE

.deploy_conan_base:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  before_script:
    - !reference [.setup_conan, script]

.deploy_conan_CommandLineArguments:
  extends:
    - .deploy_conan_base
  script:
    - conan create packaging/conan/CommandLineArguments scandyna/testing
      --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
      --test-folder None
    - conan user --password "${CI_JOB_TOKEN}" --remote scandyna ci_user
    - conan upload MdtCommandLineArguments/* --remote scandyna --all -c

.deploy_conan_CommandLineArguments_Windows:
  extends:
    - .deploy_conan_CommandLineArguments
    - .windows_runner

###############################
# Build & test templates
###############################

.cmake_configure:
  script:
    # The toolchain file expression has to be quoted when using Powershell
    # See https://gitlab.kitware.com/cmake/cmake/-/issues/23109
    - cmake "-DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake"
      -DENABLE_CORE_APPLICATION_FOR_NON_QT_USAGE=ON
      -DENABLE_GUI_APPLICATION_FOR_NON_QT_USAGE=ON
      -DENABLE_COMMAND_LINE_ARGUMENTS=ON
      -DENABLE_CONSOLE_APPLICATION=ON
      -DBUILD_TESTS=ON -DBUILD_BENCHMARKS=ON -DBUILD_EXAMPLES=ON
      -DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS -DBUILD_USE_IPO_LTO=OFF
      -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNING_AS_ERROR=ON
      ..

#.build_linux:
  #stage: build
  #before_script:
    #- !reference [.setup_conan, script]
  #script:
    #- mkdir build
    #- cd build
    #- conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS -o MdtApplication:gui=True $CONAN_EXTRA_ARGUMENTS ..
    #- source activate.sh
    #- cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNING_AS_ERROR=ON
                               #-DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS -DBUILD_USE_IPO_LTO=OFF
                               #-DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON -DBUILD_BENCHMARKS=ON
                               #-DENABLE_CORE_APPLICATION_FOR_NON_QT_USAGE=ON
                               #-DENABLE_GUI_APPLICATION_FOR_NON_QT_USAGE=ON
                               #..
    #- make -j4
    #- source deactivate.sh
  #artifacts:
    #expire_in: 1 day
    #paths:
      #- build

.build_linux:
  stage: build
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS ..
    - source conanbuild.sh || true  # Workaround to https://gitlab.com/gitlab-org/ci-cd/pipeline-authoring-stack-rank/-/issues/1
    - !reference [.cmake_configure, script]
    - cmake --build . --config $BUILD_TYPE -j4
    - source deactivate_conanbuild.sh
  artifacts:
    expire_in: 1 day
    paths:
      - build

.build_linux_native:
  stage: build
  before_script:
    - !reference [.setup_conan, script]
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  script:
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS -o MdtApplication:use_conan_qt=False ..
    - source conanbuild.sh || true  # Workaround to https://gitlab.com/gitlab-org/ci-cd/pipeline-authoring-stack-rank/-/issues/1
    - !reference [.cmake_configure, script]
    - cmake --build . --config $BUILD_TYPE -j4
    - source deactivate_conanbuild.sh
  artifacts:
    expire_in: 1 day
    paths:
      - build

#.test_linux:
  #stage: test
  #before_script:
    #- !reference [.setup_conan, script]
  #script:
    #- cd build
    #- conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS -o MdtApplication:gui=True $CONAN_EXTRA_ARGUMENTS ..
    #- ctest . --output-on-failure --verbose

.test_base:
  stage: test
  before_script:
    - !reference [.setup_conan, script]
  script:
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS ..
    - ctest --output-on-failure -C $BUILD_TYPE
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build

.test_linux:
  extends:
    - .test_base

.test_linux_native:
  stage: test
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  before_script:
    - !reference [.setup_conan, script]
  script:
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS -o MdtApplication:use_conan_qt=False ..
    - ctest . --output-on-failure --verbose

###############################
# Build & test Linux
###############################

.buildAndTest_Linux_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64_qt_widgets_modules
    BUILD_TYPE: Debug
    BUILD_SHARED_LIBS: "True"

build_linux_gcc7_x86_64_debug:
  extends:
    - .buildAndTest_Linux_gcc7_x86_64_debug
    - .build_linux

test_linux_gcc7_x86_64_debug:
  extends:
    - .buildAndTest_Linux_gcc7_x86_64_debug
    - .test_linux
  dependencies:
    - build_linux_gcc7_x86_64_debug
  needs: ["build_linux_gcc7_x86_64_debug"]


.buildAndTest_Linux_gcc7_x86_64_release:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64_qt_widgets_modules
    BUILD_TYPE: Release
    BUILD_SHARED_LIBS: "True"

build_linux_gcc7_x86_64_release:
  extends:
    - .buildAndTest_Linux_gcc7_x86_64_release
    - .build_linux

test_linux_gcc7_x86_64_release:
  extends:
    - .buildAndTest_Linux_gcc7_x86_64_release
    - .test_linux
  dependencies:
    - build_linux_gcc7_x86_64_release
  needs: ["build_linux_gcc7_x86_64_release"]


.buildAndTest_Linux_gcc7_x86_64_static_release:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64_qt_widgets_modules
    BUILD_TYPE: Release
    BUILD_SHARED_LIBS: "False"

build_linux_gcc7_x86_64_static_release:
  extends:
    - .buildAndTest_Linux_gcc7_x86_64_static_release
    - .build_linux

test_linux_gcc7_x86_64_static_release:
  extends:
    - .buildAndTest_Linux_gcc7_x86_64_static_release
    - .test_linux
  dependencies:
    - build_linux_gcc7_x86_64_static_release
  needs: ["build_linux_gcc7_x86_64_static_release"]



.buildAndTest_Linux_gcc8_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  variables:
    CONAN_PROFILE: linux_gcc8_x86_64_qt_widgets_modules
    BUILD_TYPE: Debug
    BUILD_SHARED_LIBS: "True"

build_linux_gcc8_x86_64_debug:
  extends:
    - .buildAndTest_Linux_gcc8_x86_64_debug
    - .build_linux

test_linux_gcc8_x86_64_debug:
  extends:
    - .buildAndTest_Linux_gcc8_x86_64_debug
    - .test_linux
  dependencies:
    - build_linux_gcc8_x86_64_debug
  needs: ["build_linux_gcc8_x86_64_debug"]


.buildAndTest_Linux_gcc8_x86_64_release:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  variables:
    CONAN_PROFILE: linux_gcc8_x86_64_qt_widgets_modules
    BUILD_TYPE: Release
    BUILD_SHARED_LIBS: "True"

build_linux_gcc8_x86_64_release:
  extends:
    - .buildAndTest_Linux_gcc8_x86_64_release
    - .build_linux

test_linux_gcc8_x86_64_release:
  extends:
    - .buildAndTest_Linux_gcc8_x86_64_release
    - .test_linux
  dependencies:
    - build_linux_gcc8_x86_64_release
  needs: ["build_linux_gcc8_x86_64_release"]

###############################
# Build & test Windows
###############################

###############################
# Linux builds and tests - OLD
###############################

#build_linux_gcc8_x86_64_debug:
  #variables:
    #CONAN_PROFILE: linux_gcc8_x86_64
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
  #extends: .build_linux_native

#test_linux_gcc8_x86_64_debug:
  #dependencies:
    #- build_linux_gcc8_x86_64_debug
  #extends: .test_linux_native


#build_linux_gcc8_x86_64_release:
  #variables:
    #CONAN_PROFILE: linux_gcc8_x86_64
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
  #extends: .build_linux_native

#test_linux_gcc8_x86_64_release:
  #dependencies:
    #- build_linux_gcc8_x86_64_release
  #extends: .test_linux_native


build_linux_clang6.0_x86_64_libc++_debug:
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-debug:latest
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    BUILD_TYPE: Debug
    BUILD_SHARED_LIBS: "True"
    CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
  extends: .build_linux

test_linux_clang6.0_x86_64_libc++_debug:
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-debug:latest
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    BUILD_TYPE: Debug
    BUILD_SHARED_LIBS: "True"
    CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
  dependencies:
    - build_linux_clang6.0_x86_64_libc++_debug
  extends: .test_linux


build_linux_clang6.0_x86_64_libc++_release:
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-release:latest
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    BUILD_TYPE: Release
    BUILD_SHARED_LIBS: "True"
    CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
  extends: .build_linux

test_linux_clang6.0_x86_64_libc++_release:
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-release:latest
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    BUILD_TYPE: Release
    BUILD_SHARED_LIBS: "True"
    CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
  dependencies:
    - build_linux_clang6.0_x86_64_libc++_release
  extends: .test_linux


# conan install will get the recipe for a given package on the first remote it finds
# if binaries for this recipe, with settings and options, does not exist in this remote,
# conan will fail (it will not try other remotes)
.build_linux_tsan:
  stage: build
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -o MdtApplication:use_conan_qt=True -o MdtApplication:gui=True ..
    - source activate.sh
    - cmake -G"Unix Makefiles" -DWARNING_AS_ERROR=ON -DSANITIZER_ENABLE_THREAD=ON
                               -DCMAKE_BUILD_TYPE=Instrumented -DBUILD_TYPE_INSTRUMENTED_OPTIMIZATION_LEVEL=-O1
                               -DBUILD_SHARED_LIBS=ON -DBUILD_USE_IPO_LTO=OFF
                               -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON -DBUILD_BENCHMARKS=ON
                               -DENABLE_CORE_APPLICATION_FOR_NON_QT_USAGE=ON
                               -DENABLE_GUI_APPLICATION_FOR_NON_QT_USAGE=ON
                               ..
    - make -j4
    - source deactivate.sh
  artifacts:
    expire_in: 1 day
    paths:
      - build


# Here we have to get the binaries got with conan during build
.test_linux_tsan:
  stage: test
  before_script:
    - !reference [.setup_conan, script]
  script:
    - cd build
    - conan install --profile $CONAN_PROFILE -o MdtApplication:use_conan_qt=True -o MdtApplication:gui=True ..
    - ctest --output-on-failure .


build_linux_clang6.0_x86_64_libc++_tsan:
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-tsan
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libc++_tsan_qt_widgets_modules
  extends: .build_linux_tsan

test_linux_clang6.0_x86_64_libc++_tsan:
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-tsan
  dependencies:
    - build_linux_clang6.0_x86_64_libc++_tsan
  variables:
    CONAN_PROFILE: linux_clang6.0_x86_64_libc++_tsan_qt_widgets_modules
  extends: .test_linux_tsan

###############################
# Conan create & test Linux
###############################

conan_createAndTest_CommandLineArguments_linux_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .conan_createAndTest_CommandLineArguments

#conan_linux_gcc7_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-cpp-gui:latest
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
  #extends: .conan_createAndTest

###########################################
# Deploy Conan - OS independant (use Linux)
###########################################

deploy_conan_CommandLineArguments:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .deploy_conan_CommandLineArguments

###############################
# Deploy Conan Linux
###############################

#.deploy_linux_conan:
  #extends: .deploy_conan

#deploy_linux_gcc7_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_gcc7_x86_64_release:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_gcc7_x86_64_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan


#deploy_linux_gcc7_x86_64_static_debug:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "False"
  #extends: .deploy_linux_conan

#deploy_linux_gcc7_x86_64_static_release:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "False"
  #extends: .deploy_linux_conan

#deploy_linux_gcc7_x86_64_static_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "False"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libstdc++11
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_release:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libstdc++11
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_libc++_tsan:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-tsan
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libc++_tsan_qt_widgets_modules
    #CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan


#deploy_linux_clang6.0_x86_64_libc++_debug:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-debug:latest
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    #CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_libc++_release:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-release:latest
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    #CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_libc++_relwithdebinfo:
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    #CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

###############################
# Deploy Conan Windows
###############################

###############################
# Windows
###############################

.build_windows:
  stage: build
  extends:
    - .windows_runner
  before_script:
    # TODO: remove once in docker images
    - conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git
    #- conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first
  script:
    - mkdir build
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS -o MdtApplication:gui=True ..
    - ./activate
    - cmake -G"$CMAKE_GENERATOR" $CMAKE_GENERATOR_EXTRA_ARGS -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNING_AS_ERROR=ON
                                -DCMAKE_PREFIX_PATH="$QT_PREFIX_PATH"
                                -DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS -DBUILD_USE_IPO_LTO=OFF
                                -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON -DBUILD_BENCHMARKS=ON
                                -DENABLE_CORE_APPLICATION_FOR_NON_QT_USAGE=ON
                                -DENABLE_GUI_APPLICATION_FOR_NON_QT_USAGE=ON
                                ..
    - cmake --build . --config $BUILD_TYPE -j4
    - ./deactivate
  artifacts:
    expire_in: 1 day
    paths:
      - build

# Here we have to get the binaries got with conan during build
.test_windows:
  stage: test
  extends:
    - .windows_runner
  before_script:
    # TODO: remove once in docker images
    - conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
    - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git
    #- conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first
  script:
    - cd build
    - conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o MdtApplication:gui=True ..
    - ctest . --output-on-failure --build-config $BUILD_TYPE --verbose

#.deploy_windows_conan:
  #extends:
    #- .deploy_conan
    #- .windows_runner
  #before_script:
    #- $env:PATH += ";$QT_PREFIX_PATH;$BOOST_PREFIX_PATH"


build_windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
    BUILD_SHARED_LIBS: "True"
    CMAKE_GENERATOR: "MinGW Makefiles"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  extends: .build_windows

test_windows_gcc7_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86_64
    BUILD_TYPE: Debug
  dependencies:
    - build_windows_gcc7_x86_64_debug
  extends: .test_windows


build_windows_gcc7_x86_32_debug:
  image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win32_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86
    BUILD_TYPE: Debug
    BUILD_SHARED_LIBS: "True"
    CMAKE_GENERATOR: "MinGW Makefiles"
    QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  extends: .build_windows

test_windows_gcc7_x86_32_debug:
  image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win32_mingw73:latest
  variables:
    CONAN_PROFILE: windows_gcc7_x86
    BUILD_TYPE: Debug
  dependencies:
    - build_windows_gcc7_x86_32_debug
  extends: .test_windows


build_windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Debug
    BUILD_SHARED_LIBS: "True"
    CMAKE_GENERATOR: "Visual Studio 16 2019"
    CMAKE_GENERATOR_EXTRA_ARGS: -Ax64
    QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  extends: .build_windows

test_windows_msvc16_x86_64_debug:
  image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  variables:
    CONAN_PROFILE: windows_msvc16_x86_64
    BUILD_TYPE: Debug
  dependencies:
    - build_windows_msvc16_x86_64_debug
  extends: .test_windows


#deploy_windows_gcc7_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_64_release:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_64_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan


#deploy_windows_gcc7_x86_64_static_debug:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "False"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_64_static_release:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "False"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_64_static_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "False"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan


#deploy_windows_gcc7_x86_32_debug:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_32_release:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_32_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan


#deploy_windows_msvc_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  #variables:
    #CONAN_PROFILE: windows_msvc16_x86_64
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  #extends: .deploy_windows_conan

#deploy_windows_msvc_x86_64_release:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  #variables:
    #CONAN_PROFILE: windows_msvc16_x86_64
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  #extends: .deploy_windows_conan

###############################
# API doc
###############################

build_api_doc:
  stage: build
  image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: never
  before_script:
    # TODO: remove once in docker images
    - conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
  script:
    - mkdir build
    - cd build
    - conan install ..
    - cmake -DBUILD_CPP_API_DOC=ON ..
    - doxygen
  artifacts:
    expire_in: 1 day
    paths:
      - build

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  dependencies:
    - build_api_doc
  script:
    - mv build/doc/html public
  artifacts:
    paths:
      - public
