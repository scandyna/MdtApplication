###############################
# Runners + global parts
###############################

include:
  - local: 'ci_cd/GitLab/BuildAndTest_Templates.yml'
  - local: 'ci_cd/GitLab/BuildAndTest_Linux.yml'
  - local: 'ci_cd/GitLab/BuildAndTest_Windows.yml'
  - local: 'ci_cd/GitLab/ConanTemplates.yml'
  - local: 'ci_cd/GitLab/Conan_CreateAndTest_Linux.yml'
  - local: 'ci_cd/GitLab/Conan_CreateAndTest_Windows.yml'

# GitLab shared new Windows runners
# They currently not support Docker engine
#.windows_runner:
  #tags:
    #- shared-windows
    #- windows
    #- windows-1809

.windows_runner:
  tags:
    - docker-windows


stages:
  - build
  - test
  - deploy


###############################
# Reusable templates
###############################

# TODO: OLD, remove
#.conan_createAndTest:
  #stage: build
  #script:
    #- !reference [.setup_conan, script]
    #- conan create . 0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE --test-folder None
    #- conan test test_package MdtApplication/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE
    #- conan test test_cmakedeps MdtApplication/0.0.0@scandyna/testing --profile:build $CONAN_PROFILE --profile:host $CONAN_PROFILE -s build_type=$BUILD_TYPE


#.deploy_conan:
  #stage: deploy
  #rules:
    #- if: $CI_COMMIT_TAG
      #when: on_success
    #- when: never
  #script:
    #- !reference [.setup_conan, script]
    #- conan create . scandyna/testing --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o MdtApplication:shared=$BUILD_SHARED_LIBS $CONAN_EXTRA_ARGUMENTS
    #- conan user --password "${CI_JOB_TOKEN}" --remote scandyna ci_user
    #- conan upload MdtApplication/* --remote scandyna --all -c
    ##- conan upload _Project_name_/* --remote scandyna --all -c
    ##- conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first

###############################
# Build & test Windows
###############################



###########################################
# Deploy Conan - OS independant (use Linux)
###########################################

deploy_conan_CommandLineArguments:
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  variables:
    CONAN_PROFILE: linux_gcc7_x86_64
    BUILD_TYPE: Debug
  extends: .deploy_conan_CommandLineArguments

###############################
# Deploy Conan Linux
###############################

#.deploy_linux_conan:
  #extends: .deploy_conan

#deploy_linux_gcc7_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_gcc7_x86_64_release:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_gcc7_x86_64_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan


#deploy_linux_gcc7_x86_64_static_debug:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "False"
  #extends: .deploy_linux_conan

#deploy_linux_gcc7_x86_64_static_release:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "False"
  #extends: .deploy_linux_conan

#deploy_linux_gcc7_x86_64_static_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #dependencies:
  #variables:
    #CONAN_PROFILE: linux_gcc7_x86_64_qt_core
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "False"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libstdc++11
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_release:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-gui:latest
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libstdc++11
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_libc++_tsan:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-tsan
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libc++_tsan_qt_widgets_modules
    #CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan


#deploy_linux_clang6.0_x86_64_libc++_debug:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-debug:latest
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    #CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_libc++_release:
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp-qt-5.14.2-widgets-clang6.0-release:latest
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    #CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

#deploy_linux_clang6.0_x86_64_libc++_relwithdebinfo:
  #variables:
    #CONAN_PROFILE: linux_clang6.0_x86_64_libc++_qt_widgets_modules
    #CONAN_EXTRA_ARGUMENTS: -o MdtApplication:use_conan_qt=True
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
  #extends: .deploy_linux_conan

###############################
# Deploy Conan Windows
###############################

###############################
# Windows
###############################

#.build_windows:
  #stage: build
  #rules:
    #- !reference [.buildAndTest_rules, rules]
  #extends:
    #- .windows_runner
  #before_script:
    ## TODO: remove once in docker images
    #- conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
    #- conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git
    ##- conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first
  #script:
    #- mkdir build
    #- cd build
    #- conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS -o MdtApplication:gui=True ..
    #- ./activate
    #- cmake -G"$CMAKE_GENERATOR" $CMAKE_GENERATOR_EXTRA_ARGS -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DWARNING_AS_ERROR=ON
                                #-DCMAKE_PREFIX_PATH="$QT_PREFIX_PATH"
                                #-DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS -DBUILD_USE_IPO_LTO=OFF
                                #-DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON -DBUILD_BENCHMARKS=ON
                                #-DENABLE_CORE_APPLICATION_FOR_NON_QT_USAGE=ON
                                #-DENABLE_GUI_APPLICATION_FOR_NON_QT_USAGE=ON
                                #..
    #- cmake --build . --config $BUILD_TYPE -j4
    #- ./deactivate
  #artifacts:
    #expire_in: 1 day
    #paths:
      #- build

## Here we have to get the binaries got with conan during build
#.test_windows:
  #stage: test
  #rules:
    #- !reference [.buildAndTest_rules, rules]
  #extends:
    #- .windows_runner
  #before_script:
    ## TODO: remove once in docker images
    #- conan remote add scandyna https://gitlab.com/api/v4/projects/25668674/packages/conan
    #- conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git
    ##- conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first
  #script:
    #- cd build
    #- conan install --profile $CONAN_PROFILE -s build_type=$BUILD_TYPE -o MdtApplication:gui=True ..
    #- ctest . --output-on-failure --build-config $BUILD_TYPE --verbose

#.deploy_windows_conan:
  #extends:
    #- .deploy_conan
    #- .windows_runner
  #before_script:
    #- $env:PATH += ";$QT_PREFIX_PATH;$BOOST_PREFIX_PATH"



#deploy_windows_gcc7_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_64_release:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_64_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan


#deploy_windows_gcc7_x86_64_static_debug:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "False"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_64_static_release:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "False"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_64_static_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86_64
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "False"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_64"
  #extends: .deploy_windows_conan


#deploy_windows_gcc7_x86_32_debug:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_32_release:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan

#deploy_windows_gcc7_x86_32_relwithdebinfo:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win32_mingw73:latest
  #variables:
    #CONAN_PROFILE: windows_gcc7_x86
    #BUILD_TYPE: RelWithDebInfo
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/mingw73_32"
  #extends: .deploy_windows_conan


#deploy_windows_msvc_x86_64_debug:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  #variables:
    #CONAN_PROFILE: windows_msvc16_x86_64
    #BUILD_TYPE: Debug
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  #extends: .deploy_windows_conan

#deploy_windows_msvc_x86_64_release:
  #image: registry.gitlab.com/scandyna/docker-images/windows-cpp-qt-5.14.2-win64_msvc2017_64:latest
  #variables:
    #CONAN_PROFILE: windows_msvc16_x86_64
    #BUILD_TYPE: Release
    #BUILD_SHARED_LIBS: "True"
    #QT_PREFIX_PATH: "C:/Qt/5.14.2/msvc2017_64"
  #extends: .deploy_windows_conan

###############################
# API doc
###############################

build_api_doc:
  stage: build
  #image: registry.gitlab.com/scandyna/docker-images/ubuntu-18.04-cpp:latest
  image: registry.gitlab.com/scandyna/docker-images-ubuntu/ubuntu-18.04-xserver-build-tools:latest
  #rules:
    #- if: $CI_COMMIT_TAG
      #when: always
    #- when: never
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    #- conan install ..
    #- conan install -o MdtApplication:build_only_doc=True ..
    - conan install --profile linux_gcc7_x86_64_qt_widgets_modules -s build_type=Debug -o MdtApplication:build_only_doc=True --build=missing ..
    #- cmake -DBUILD_CPP_API_DOC=ON ..
    - cmake -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_CPP_API_DOC=ON ..
    - make documentation
  artifacts:
    expire_in: 1 day
    paths:
      - build

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  dependencies:
    - build_api_doc
  script:
    - mv build/doc/html public
  artifacts:
    paths:
      - public
