
# NOTE: to build the PATH:
#  - Should not double quote them
#  - Never build the PATH on conditions using cmd (probably the default if not specified)
# Example:
#  if "%platform%"=="mingw" (set "PATH=%MINGW_PREFIX_PATH%\bin;%PATH%")
#  This allways gave a error like "\Microsoft was unexpected at this time"
#  Have try with double quotes, without, any combinations, simply never worked.
#  See also: http://www.blinnov.com/en/2010/06/04/microsoft-was-unexpected-at-this-time/
# The solution could be to use PowerShell

environment:
  matrix:
    # MinGW x86_64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      name: mingw_x86_64
      platform: mingw
      CMAKE_GENERATOR: "MinGW Makefiles"
      QT_PREFIX_PATH: 'C:\Qt\5.13\mingw73_64'
      MINGW_PREFIX_PATH: 'C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64'
      extra_path_command: 'set PATH=%MINGW_PREFIX_PATH%\bin;%PATH%'
      conan_profile_filename: 'windows_gcc7_x86_64'
      conan_create_extra_args: ' -e CC=%MINGW_PREFIX_PATH%\bin\gcc -e CXX=%MINGW_PREFIX_PATH%\bin\g++'
    # MinGW x86 (32bit)
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      name: mingw_x86
      platform: mingw
      CMAKE_GENERATOR: "MinGW Makefiles"
      QT_PREFIX_PATH: 'C:\Qt\5.13.2\mingw73_32'
      MINGW_PREFIX_PATH: 'C:\Qt\Tools\mingw730_32'
      extra_path_command: 'set PATH=%MINGW_PREFIX_PATH%\bin;%PATH%'
      conan_profile_filename: 'windows_gcc7_x86'
      conan_create_extra_args: ' -e CC=%MINGW_PREFIX_PATH%\bin\gcc -e CXX=%MINGW_PREFIX_PATH%\bin\g++'
    # Visual Studio x86_64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      name: msvc_x86_64
      platform: msvc
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
      QT_PREFIX_PATH: 'C:\Qt\5.13\msvc2017_64'
      extra_path_command: ''
      conan_profile_filename: 'windows_msvc15_x86_64'
      conan_create_extra_args:

configuration:
  - Debug
  - Release

install:
  # Yet a other hack to enable long path support (>250 chars).. See https://github.com/appveyor/ci/issues/3129
  - ps: Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem' -Name 'LongPathsEnabled' -Value 1
  - ps: Start-Sleep -s 10
  - ps: Restart-Computer -Force
  - ps: Start-Sleep -s 10
  - set PATH=C:\Python38;C:\Python38\Scripts;%PATH%
  - pip3 install conan
  - conan --version
  - conan remote add scandyna https://api.bintray.com/conan/scandyna/public-conan
  - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
  - conan config install --source-folder conan https://gitlab.com/scandyna/conan-config.git
  - conan remote update scandyna https://api.bintray.com/conan/scandyna/public-conan --insert 0 # Check for package in scandyna first
  - conan user -p %BINTRAY_API_KEY% -r scandyna scandyna

before_build:
  - "%extra_path_command%"
  # Workaround for CMake not wanting sh.exe on PATH for MinGW
  # Thanks to: http://help.appveyor.com/discussions/problems/3193-cmake-building-for-mingw-issue-with-git-shexe
  - set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  - set PATH=C:\Python38;C:\Python38\Scripts;%PATH%
  - echo %PATH%

build_script:
  - mkdir build
  - cd build
  - conan install --profile %conan_profile_filename% -s build_type=%configuration% -o build_tests=True -o MdtApplication:gui=True ..
  - cmake -G "%CMAKE_GENERATOR%" -DCMAKE_TOOLCHAIN_FILE=conan_paths.cmake -DCMAKE_BUILD_TYPE=%configuration% -DQT_PREFIX_PATH="%QT_PREFIX_PATH%"
          -DBUILD_TESTS=ON -DBUILD_BENCHMARKS=ON -DBUILD_EXAMPLES=ON -DWARNING_AS_ERROR=ON -DENABLE_CORE_APPLICATION_FOR_NON_QT_USAGE=ON -DENABLE_GUI_APPLICATION_FOR_NON_QT_USAGE=ON ..
  - cmake --build . --config %configuration%

test_script:
  - ctest --output-on-failure --build-config %configuration% -j4 .


# Easy tasks made difficult..
# See https://github.com/appveyor/ci/issues/2042
after_test:
  - IF DEFINED APPVEYOR_REPO_TAG_NAME set PATH=%QT_PREFIX_PATH%\bin;%PATH% && cd .. && conan create . scandyna/testing --profile %conan_profile_filename% -s build_type=%configuration% -o MdtApplication:gui=True %conan_create_extra_args% && conan upload MdtApplication/* --remote scandyna --all -c

