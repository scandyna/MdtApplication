/****************************************************************************
 **
 ** Copyright (C) 2019-2021 Philippe Steinmann.
 **
 ** This file is part of MdtApplication library.
 **
 ** MdtApplication is free software: you can redistribute it and/or modify
 ** it under the terms of the GNU Lesser General Public License as published by
 ** the Free Software Foundation, either version 3 of the License, or
 ** (at your option) any later version.
 **
 ** MdtApplication is distributed in the hope that it will be useful,
 ** but WITHOUT ANY WARRANTY; without even the implied warranty of
 ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ** GNU Lesser General Public License for more details.
 **
 ** You should have received a copy of the GNU Lesser General Public License
 ** along with MdtApplication.  If not, see <http://www.gnu.org/licenses/>.
 **
 ****************************************************************************/

/*! \mainpage Overview
 *
 * \section QApplication_like_classes QApplication like classes
 *
 *  In the %main() function of a Mdt/Qt based application,
 *   a application class should be instanciated.
 *
 *  To reduce dependencies, several application classes exists:
 *  |           Class                   |                    Description                      |   Main dependencies  |
 *  | :-------------------------------- | :-------------------------------------------------- | :------------------- |
 *  | Mdt::CoreApplicationForNonQtUsage | Provide a QCoreApplication for a non Qt application | QtCore               |
 *  | Mdt::GuiApplicationForNonQtUsage  | Provide a QGuiApplication for a non Qt application  | QtGui                |
 *
 * \ref example_MyNonQtCoreLibrary
 *
 * \ref example_MyNonQtGuiLibrary
 *
 *
 * \section console_application Console based application
 *
 * It could be required to create a console application with support of the Qt event loop.
 * This can be done with Mdt::AbstractConsoleApplicationMainFunction .
 *
 * \section helpers Helpers
 *
 * It can happen that we have to pass custom arguments to QCoreApplication,
 * for example in a test.
 * Manipulating a char** arguments vector is not convenient.
 * Using Mdt::CommandLineArguments can help for such case.
 */
